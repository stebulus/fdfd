#!@bash@/bin/bash
set -euo pipefail
me=$(@coreutils@/bin/basename "${BASH_SOURCE[0]}")
here=$(@coreutils@/bin/dirname "${BASH_SOURCE[0]}")

if [ $# -ne 3 ]; then
    echo "usage: $me DBDIR RATEFILE MAXRATE" >&2
    exit 2
fi
dbdir=$1
ratefile=$2
maxrate=$3
s3base=$(@coreutils@/bin/cat "$dbdir"/s3base)

cleanup() {
    if [ -v tmp ]; then rm -rf "$tmp"; fi
}
trap cleanup EXIT
tmp=$(@coreutils@/bin/mktemp --tmpdir --directory "$me".XXXXXXXX)

"$here"/fdfd fetchable "$dbdir" >"$tmp"/fetchable
"$here"/fdfd explorable "$dbdir" >"$tmp"/explorable

# rate control to smooth out spikes in number of actions
avail=$(@coreutils@/bin/cat "$tmp"/fetchable "$tmp"/explorable |
    @coreutils@/bin/wc -l)
if [ -e "$ratefile" ]; then
    oldrate=$(@coreutils@/bin/cat "$ratefile")
else
    oldrate=$(echo "$maxrate*0.5" |@bc@/bin/bc -l)
fi
if [ "$avail" -gt 0 ]; then
    newrate=$(@coreutils@/bin/echo \
        "x=0.99*$oldrate + 0.01*$avail; if (x > $maxrate) $maxrate else x" |
        @bc@/bin/bc -l)
    echo "$newrate" >"$ratefile"
else
    newrate=$oldrate
fi
todo=$(echo "$newrate" |@awk@/bin/awk '{ print int($0+0.5) }')

{
    @coreutils@/bin/sort -R "$tmp"/fetchable |@sed@/bin/sed 's,^,fetch ,'
    @coreutils@/bin/sort -R "$tmp"/explorable |@sed@/bin/sed 's,^,explore ,'
} |
@sed@/bin/sed -n "1,${todo}p" |
while read verb url; do
  if ! "$here"/fdfd "$verb" "$s3base" "$url" | "$here"/fdfd merge "$dbdir"; then
    echo "$me: error doing: $verb $url" >&2
  fi
done
